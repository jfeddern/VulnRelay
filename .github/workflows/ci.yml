# ABOUTME: Comprehensive CI/CD workflow for VulnRelay project.
# ABOUTME: Handles build, test, security checks, and publishing to ghcr.io.

name: CI

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
    paths-ignore:
      - '*.md'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '*.md'

env:
  HELM_VERSION: "3.18.4"
  GO_VERSION: "1.24"
  MIN_COVERAGE: 70

jobs:
  test:
    name: Validate, Build & Test Application
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Format check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not properly formatted:"
          gofmt -s -l .
          exit 1
        fi

    - name: Vet
      run: go vet ./...

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Check test coverage
      run: |
        COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
        echo "Total test coverage: ${COVERAGE}%"
          
        # Require minimum ${{ env.MIN_COVERAGE }}% coverage
        if (( $(echo "$COVERAGE < ${{ env.MIN_COVERAGE }}" | bc -l) )); then
          echo "❌ Test coverage ($COVERAGE%) is below minimum requirement (${{ env.MIN_COVERAGE }}%)"
          exit 1
        fi
        echo "✅ Test coverage meets requirements: ${COVERAGE}%"

    - name: Build application
      run: go build -v -o vulnrelay ./cmd/vulnrelay

  lint-helm:
    name: Lint Helm Chart
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: ${{ env.HELM_VERSION }}

    - name: Lint Helm chart
      run: helm lint helm/vulnrelay

    - name: Template Helm chart
      run: |
        helm template test-release helm/vulnrelay \
          --set config.ecrAccountId=123456789012 \
          --set config.ecrRegion=us-east-1 \
          --dry-run
